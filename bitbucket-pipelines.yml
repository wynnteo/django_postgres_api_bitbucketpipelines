image: atlassian/default-image:2

pipelines:
  branches:
    master:
      - step:
          name: Build and Push
          services:
            - docker
          script:
            # - echo "Logging in to AWS ECR..."
            # - eval $(aws ecr get-login --region $AWS_REGION --no-include-email)
            - echo "Building and pushing Docker images..."
            - docker build --no-cache -t $IMAGE_NAME ./backend
            - docker tag $IMAGE_NAME $IMAGE_NAME:latest
            # use pipe to push the image to AWS ECR
            - pipe: atlassian/aws-ecr-push-image:1.3.0
              variables:
                AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
                AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
                AWS_DEFAULT_REGION: $AWS_REGION
                IMAGE_NAME: $IMAGE_NAME
                TAGS: "$BITBUCKET_BUILD_NUMBER latest"
            - echo "Copy file to build folder"
            - mkdir build
            - cp -R nginx/ build/
            - cp docker-compose.yml build/
            - cp run.sh build/
          artifacts:
            - build/**

      - step:
          name: Deploy artifacts using SCP to EC2
          script:
            - pipe: atlassian/scp-deploy:1.2.1
              variables:
                USER: ec2-user
                SERVER: $EC2_HOSTNAME
                REMOTE_PATH: /home/ec2-user
                LOCAL_PATH: '${BITBUCKET_CLONE_DIR}/build/*'
                SSH_KEY: $SSH_KEY
                EXTRA_ARGS: '-r'
                DEBUG: 'true'

      - step:
          name: SSH to EC2 to start docker
          script:
            - pipe: atlassian/ssh-run:0.4.2
              variables:
                SSH_USER: ec2-user
                SERVER: $EC2_HOSTNAME
                COMMAND: 'chmod +x /home/ec2-user/run.sh &&./run.sh'
                SSH_KEY: $SSH_KEY
                ENV_VARS: >-
                  AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
                  AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
                  ECR_URL=$ECR_URL:latest
                DEBUG: 'true'